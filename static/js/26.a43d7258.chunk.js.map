{"version":3,"file":"static/js/26.a43d7258.chunk.js","mappings":"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","sources":["pages/GameCenter/Alert/added.tsx","pages/GameCenter/ListOne.tsx"],"sourcesContent":["import React, { useState, useImperativeHandle, useEffect, forwardRef,useRef } from 'react';\r\nimport {Modal, Form, Input } from 'antd';\r\nfunction Added(props: any, refs: any) {\r\n  const [myForm] = Form.useForm();\r\n  let { title, row, update } = props\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [val, setval] = useState({}) as any;\r\n  useEffect(() => {\r\n       setval({...row})\r\n      myForm.setFieldsValue(row);\r\n       \r\n  }, [row])\r\n  useImperativeHandle(\r\n    refs,\r\n    () => ({\r\n      showModal() {\r\n        showModal()\r\n      },\r\n    })\r\n  )\r\n  const showModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const handleOk = () => {\r\n\r\n    update(title,val)\r\n    setval({title:'',value:''})\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const onFinish = (values: any) => {\r\n    switch (values.target.id) {\r\n      case 'basic_title':\r\n        setval({ ...val, title: values.target.value })\r\n        break;\r\n      case 'basic_value':\r\n        setval({ ...val, value: values.target.value })\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal title={title} visible={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n        <Form\r\n          form={myForm}\r\n          name=\"basic\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          onChange={onFinish}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"标题\"\r\n            name=\"title\"\r\n            rules={[{ required: true, message: '请输入标题!' }]}\r\n          >\r\n            <Input placeholder='请输入标题' />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"内容\"\r\n            name=\"value\"\r\n            rules={[{ required: true, message: '请输入内容!' }]}\r\n          >\r\n            <Input placeholder='请输入内容' />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default forwardRef(Added)","import React, { useState, useEffect, useRef } from 'react'\r\nimport Added from './Alert/added';\r\nimport './scss/index.scss'\r\nimport { Pagination, ConfigProvider, Table, Button, Space } from 'antd';\r\nconst { Column, ColumnGroup } = Table;\r\nexport default function ListOne() {\r\n\tconst modal: any = useRef(null)\r\n\tlet [date, setdate] = useState([]) as any\r\n\tlet [row, setrow] = useState()\r\n\tlet [title, settitles] = useState()\r\n\tuseEffect(() => {\r\n\t\twindow.api.signin.province.list().then((res: any) => {\r\n\t\t\tsetdate(res.data.list.map((value: any, index: any) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...value,\r\n\t\t\t\t\tkey: index + 1\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t})\r\n\t}, [modal])\r\n\tconst update = (type: string, row: any) => {\r\n\t\tif (type === '新增数据') {\r\n\t\t\tObject.assign(row,{key: Math.random()* 1000})\r\n\t\t\tsetdate([row,...date])\r\n\t\t} else {\r\n\t\t\tlet newa=date.map((v: any, i: any) => {\r\n\t\t\t\tif (v.key === row.key) v=row\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...v,\r\n\t\t\t\t}\t\r\n\t\t\t})\r\n\t\t\tsetdate(newa)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ATable date={date} modal={modal} settitles={settitles} setrow={setrow} setdate={setdate} />\r\n\t\t\t<Added ref={modal} title={title} row={row} update={update} />\r\n\t\t</div>\r\n\t)\r\n}\r\nconst ATable = (props: any) => {\r\n\tconst { date, modal, settitles, setrow, setdate } = props\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst start = () => {\r\n\t\tsetLoading(true);\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetSelectedRowKeys([]);\r\n\t\t\tsetLoading(false);\r\n\t\t}, 1000);\r\n\t};\r\n\tconst columns: any = [\r\n\t\t{\r\n\t\t\ttitle: '标题',\r\n\t\t\tdataIndex: 'title',\r\n\t\t\tkey: 'title',\r\n\t\t\twidth: 200,\r\n\t\t\talign: 'center'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '内容',\r\n\t\t\tdataIndex: 'value',\r\n\t\t\tkey: 'value',\r\n\t\t\twidth: 200,\r\n\t\t\talign: 'center'\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '操作',\r\n\t\t\tkey: 'action',\r\n\t\t\twidth: 200,\r\n\t\t\talign: 'center',\r\n\t\t\trender: (_: any, date: any) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button type=\"link\" onClick={() => add('修改数据', date)}>修改</Button>\r\n\t\t\t\t\t\t<Button type=\"link\" danger onClick={() => Delete(date.key)}>删除</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\tconst onSelectChange = (newSelectedRowKeys: any, selectedRows: any, info: any) => {\r\n\r\n\t\tsetSelectedRowKeys(newSelectedRowKeys);\r\n\t};\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys,\r\n\t\tonChange: onSelectChange,\r\n\t};\r\n\r\n\tconst add = (trpe?: string, row?: any) => {\r\n\t\tsettitles(trpe)\r\n\t\tsetrow(row)\r\n\t\tmodal.current?.showModal()\r\n\t}\r\n\tconst Delete = (id: string) => {\r\n\t\tsetdate(date.filter((v: any) => v.key !== id))\r\n\t}\r\n\tconst hasSelected = selectedRowKeys.length > 0;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='layout'>\r\n\t\t\t\t<div style={{ marginBottom: 16 }}>\r\n\t\t\t\t\t<Button type=\"primary\" onClick={start} disabled={!hasSelected} loading={loading}>\r\n\t\t\t\t\t\t选择\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<span style={{ marginLeft: 8 }}>\r\n\t\t\t\t\t\t{hasSelected ? ` ${selectedRowKeys.length} 条` : ''}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button style={{ marginRight: 18 }} type=\"primary\" onClick={() => add('新增数据')}>\r\n\t\t\t\t\t\t新增\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Table bordered rowSelection={rowSelection} columns={columns} dataSource={date} pagination={{\r\n\t\t\t\ttotal: date.length,\r\n\t\t\t\tdefaultCurrent: 1,\r\n\t\t\t\tpageSize: 10,\r\n\t\t\t\tshowSizeChanger:false,\r\n\t\t\t\tshowQuickJumper: true,\r\n\t\t\t\tshowTotal: (total) => `共 ${total} 条`\r\n\t\t\t}}>\r\n\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t);\r\n}"],"names":["Added","props","refs","Form","myForm","title","row","update","useState","isModalOpen","setIsModalOpen","val","setval","useEffect","setFieldsValue","useImperativeHandle","showModal","visible","onOk","value","onCancel","form","name","labelCol","span","wrapperCol","onChange","values","target","id","autoComplete","label","rules","required","message","placeholder","forwardRef","Table","ListOne","modal","useRef","date","setdate","setrow","settitles","window","api","signin","province","list","then","res","data","map","index","key","ATable","ref","type","Object","assign","Math","random","newa","v","i","selectedRowKeys","setSelectedRowKeys","loading","setLoading","columns","dataIndex","width","align","render","_","onClick","add","danger","Delete","rowSelection","newSelectedRowKeys","selectedRows","info","trpe","current","filter","hasSelected","length","className","style","marginBottom","setTimeout","disabled","marginLeft","marginRight","bordered","dataSource","pagination","total","defaultCurrent","pageSize","showSizeChanger","showQuickJumper","showTotal"],"sourceRoot":""}